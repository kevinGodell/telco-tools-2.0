{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./src/client/js/vendor/pwaCompat.js","webpack://[name]/./node_modules/pwacompat/src/pwacompat.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","XMLHttpRequest","navigator","standalone","capableDisplayModes","userAgent","isSafariMobile","vendor","indexOf","isIEOrEdge","Boolean","match","isEdgePWA","Windows","manifestEl","internalStorage","sessionStorage","e","getElementInHead","selector","document","head","querySelector","store","k","v","undefined","setup","manifestHref","href","hrefFactory","options","length","opt","URL","part","toString","buildHrefFactory","location","storedResponse","process","JSON","parse","err","console","warn","xhr","open","withCredentials","getAttribute","onload","data","responseText","send","push","localName","attr","check","node","createElement","setAttribute","appendChild","meta","content","largestSize","icon","sizes","split","map","size","Infinity","parseInt","Math","max","apply","manifest","urlFactory","icons","maskable","filter","purpose","includes","sort","a","b","appleTouchIcons","querySuffix","metaViewport","viewport","viewportFitCover","display","isCapable","color","themeIsLight","shouldUseLightForeground","UI","ViewManagement","ApplicationView","getForCurrentView","titleBar","getEdgeTitleBar","foregroundColor","backgroundColor","readColor","colorToWindowsRGBA","updateThemeColorRender","largest","orientation","String","substr","backgroundIsLight","itunes","related","app","forEach","findAppleId","splashFor","width","height","ratio","window","devicePixelRatio","ctx","contextForCanvas","scale","fillStyle","fillRect","translate","iconWidth","iconHeight","drawImage","font","getComputedStyle","getPropertyValue","title","measure","measureText","textHeight","actualBoundingBoxAscent","fillText","words","cand","slice","join","measureWidth","splice","canvas","toDataURL","appendSplash","generatedSplash","rendered","prev","change","update","renderBothSplash","applicationIcon","done","screen","portrait","landscape","setTimeout","saveUpdate","stringify","fetchIconAndBuildSplash","shift","img","Image","crossOrigin","onerror","redrawn","updateTransparent","src","left","redrawRemainingIcons","getImageData","f","pow","lum","abs","image","background","force","context","globalCompositeOperation","getContext","readyState","addEventListener"],"mappings":"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","file":"pwacompat.fb3758187fa7f2c7657a.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 154);\n","'use strict';\n\nimport 'pwacompat';\n","/*\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n'use strict';\n\n// WARNING\n// Don't use this file directly in production! Please include `pwacompat.min.js`!\n// WARNING\n/**\n * @suppress {uselessCode}\n */\nfunction unused() {\n  // compiled out, but crashes IE11 early rather than within the code\n  `Please don't use this file directly: include pwacompat.min.js instead!`;\n}\n\n(function() {\n  // basic feature detection: from IE10+\n  // also fallout on 'navigator.standalone', we _are_ an iOS PWA\n  if (!('onload' in XMLHttpRequest.prototype) || navigator.standalone) {\n    return;\n  }\n\n  const debug = false;\n\n  const capableDisplayModes = ['standalone', 'fullscreen', 'minimal-ui'];\n  const defaultSplashColor = '#f8f9fa';\n  const defaultSplashTextSize = 24;\n  const defaultFontName = 'HelveticaNeue-CondensedBold';\n  const idealSplashIconSize = 128;\n  const minimumSplashIconSize = 48;\n  const splashIconPadding = 20;\n  const appleIconSizeMin = 120;\n\n  const userAgent = navigator.userAgent || '';\n  const isSafari = (navigator.vendor && navigator.vendor.indexOf('Apple') !== -1);\n  const isSafariMobile = isSafari && (userAgent.indexOf('Mobile/') !== -1 || 'standalone' in navigator) || debug;\n  const isIEOrEdge = Boolean(userAgent.match(/(MSIE |Edge\\/|Trident\\/)/));\n  const isEdgePWA = (typeof Windows !== 'undefined');\n\n  let manifestEl;  // we need this later, not just for JSON\n  let internalStorage;\n  try {\n    internalStorage = sessionStorage;\n  } catch (e) {}\n  internalStorage = internalStorage || {};\n\n  /**\n   * Retrieves element in head if available, otherwise null\n   * @param {string} selector CSS selector\n   * @return {?Element}\n   */\n  function getElementInHead(selector) {\n    // It's possible to pass \"bad\" attr or values here (originally from the manifest); just\n    // return null if there's something wrong.\n    try {\n      return document.head.querySelector(selector);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @param {string} k\n   * @param {string=} v\n   * @return {string|undefined}\n   */\n  function store(k, v) {\n    const key = '__pwacompat_' + k;\n    if (v !== undefined) {\n      internalStorage[key] = v;\n    }\n    return internalStorage[key];\n  }\n\n  function setup() {\n    manifestEl = getElementInHead('link[rel=\"manifest\"]');\n    const manifestHref = manifestEl ? manifestEl.href : '';\n    if (!manifestHref) {\n      throw `can't find <link rel=\"manifest\" href=\"..\" />'`;\n    }\n\n    const hrefFactory = buildHrefFactory([manifestHref, location]);\n    const storedResponse = store('manifest');\n    if (storedResponse) {\n      try {\n        const data = /** @type {!Object<string, *>} */ (JSON.parse(storedResponse));\n        process(data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n      return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', manifestHref);\n\n    // nb. use getAttribute for older brower safety\n    xhr.withCredentials = (manifestEl.getAttribute('crossorigin') === 'use-credentials');\n\n    // this is IE10+\n    xhr.onload = () => {\n      try {\n        const data = /** @type {!Object<string, *>} */ (JSON.parse(xhr.responseText));\n        store('manifest', xhr.responseText);\n        process(data, hrefFactory);\n      } catch (err) {\n        console.warn('PWACompat error', err);\n      }\n    };\n    xhr.send(null);\n  }\n\n  /**\n   * @param {!Array<string>} options\n   * @return {function(string): string}\n   */\n  function buildHrefFactory(options) {\n    for (let i = 0; i < options.length; ++i) {\n      const opt = options[i];\n      try {\n        new URL('', opt);\n        return (part) => (new URL(part || '', opt)).toString();\n      } catch (e) {}\n    }\n    return (part) => part || '';\n  }\n\n  /**\n   * Adds an element in the <head> if it's not present already based on the passed check.\n   * @param {string} localName tag name\n   * @param {!Object<string>} attr key-value collection of attributes\n   * @param {string} check to apply to the tag\n   */\n  function push(localName, attr, check) {\n    if (getElementInHead(localName + check)) {\n      return;\n    }\n    const node = document.createElement(localName);\n    for (const k in attr) {\n      node.setAttribute(k, attr[k]);\n    }\n    document.head.appendChild(node);\n    return node;\n  }\n\n  function meta(name, content) {\n    if (content) {\n      if (content === true) {\n        content = 'yes';\n      }\n      push('meta', {name, content}, `[name=\"${name}\"]`);\n    }\n  }\n\n  /**\n   * @param {{sizes: string}} icon\n   */\n  function largestSize(icon) {\n    const sizes = icon.sizes.split(/\\s+/g).map((size) => {\n      if (size === 'any') {\n        return Infinity;\n      }\n      return parseInt(size, 10) || 0; // NaN is falsey\n    });\n    return Math.max.apply(null, sizes); // don't use ... as Closure inserts additional code\n  }\n\n  /**\n   * @param {!Object<string, (string|*)>} manifest\n   * @param {function(string): string} urlFactory\n   */\n  function process(manifest, urlFactory) {\n    const icons = manifest['icons'] || [];\n    const maskable = icons.filter((icon) => (icon.purpose || '').includes('maskable'));\n    icons.sort((a, b) => largestSize(b) - largestSize(a));  // largest first\n    maskable.sort((a, b) => largestSize(b) - largestSize(a));\n\n    const appleTouchIcons = (maskable.length > 0 ? maskable : icons).map((icon) => {\n      // create regular link icons as byproduct\n      const attr = {'rel': 'icon', 'href': urlFactory(icon['src']), 'sizes': icon['sizes']};\n      // This checks for matching \"rel\" and \"sizes\". We don't check for the same image file, as\n      // it is used literally by ourselves (and could be set by users for another icon).\n      const querySuffix = `[sizes=\"${icon['sizes']}\"]`;\n      push('link', attr, '[rel=\"icon\"]' + querySuffix);\n      if (!isSafariMobile) {\n        return;\n      }\n      const dim = largestSize(icon);\n      if (dim < appleIconSizeMin) {\n        return;\n      }\n      attr['rel'] = 'apple-touch-icon';\n\n      // nb. we used to call `removeAttribute('sizes')` here, which crashed iOS 8\n      // ... sizes has been supported since iOS 4.2 (!)\n      return push('link', attr, '[rel=\"apple-touch-icon\"]' + querySuffix);\n    }).filter(Boolean);\n\n    // nb. only for iOS, but watch for future CSS rule `@viewport { viewport-fit: cover; }`\n    const metaViewport = getElementInHead('meta[name=\"viewport\"]');\n    const viewport = metaViewport && metaViewport.content || '';\n    const viewportFitCover = Boolean(viewport.match(/\\bviewport-fit\\s*=\\s*cover\\b/));\n\n    const display = manifest['display'];\n    const isCapable = capableDisplayModes.indexOf(display) !== -1;\n    meta('mobile-web-app-capable', isCapable);\n    updateThemeColorRender(/** @type {string} */ (manifest['theme_color']) || 'black', viewportFitCover);\n\n    if (isIEOrEdge) {\n      // Pinned Sites, largely from https://technet.microsoft.com/en-us/windows/dn255024(v=vs.60)\n      meta('application-name', manifest['short_name']);\n      meta('msapplication-tooltip', manifest['description']);\n      meta('msapplication-starturl', urlFactory(/** @type {string} */ (manifest['start_url']) || '.'));\n      meta('msapplication-navbutton-color', manifest['theme_color']);\n\n      const largest = icons[0];\n      if (largest) {\n        meta('msapplication-TileImage', urlFactory(largest['src']));\n      }\n      meta('msapplication-TileColor', manifest['background_color']);\n    }\n\n    meta('theme-color', manifest['theme_color']);\n\n    if (!isSafariMobile) {\n      // TODO(samthor): We don't detect QQ or UC, we just set the vars anyway.\n      const orientation = simpleOrientationFor(manifest['orientation']);\n      meta('x5-orientation', orientation);      // QQ\n      meta('screen-orientation', orientation);  // UC\n      if (display === 'fullscreen') {\n        meta('x5-fullscreen', 'true');  // QQ\n        meta('full-screen', 'yes');     // UC\n      } else if (isCapable) {\n        meta('x5-page-mode', 'app');         // QQ\n        meta('browsermode', 'application');  // UC\n      }\n\n      return;  // the rest of this file is for Mobile Safari\n    }\n\n    const backgroundColor =\n        /** @type {string} */ (manifest['background_color']) || defaultSplashColor;\n    const backgroundIsLight = shouldUseLightForeground(backgroundColor);\n\n    // Add related iTunes app from manifest.\n    const itunes = findAppleId(manifest['related_applications']);\n    itunes && meta('apple-itunes-app', `app-id=${itunes}`);\n\n    // General iOS meta tags.\n    meta('apple-mobile-web-app-capable', isCapable);\n    meta('apple-mobile-web-app-title', manifest['short_name'] || manifest['name']);\n\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {string} orientation\n     * @param {?Image} icon\n     * @return {function(): string}\n     */\n    function splashFor(width, height, orientation, icon) {\n      const ratio = window.devicePixelRatio;\n      const ctx = contextForCanvas({width: width * ratio, height: height * ratio});\n\n      ctx.scale(ratio, ratio);\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.translate(width / 2, (height - splashIconPadding) / 2);\n\n      if (icon) {\n        // nb: on Chrome, we need the image >=48px, use the big layout >=80dp, ideal is >=128dp\n        let iconWidth = (icon.width / ratio);\n        let iconHeight = (icon.height / ratio);\n        if (iconHeight > idealSplashIconSize) {\n          // clamp to 128px height max\n          iconWidth /= (iconHeight / idealSplashIconSize);\n          iconHeight = idealSplashIconSize;\n        }\n\n        if (iconWidth >= minimumSplashIconSize && iconHeight >= minimumSplashIconSize) {\n          ctx.drawImage(icon, iconWidth / -2, iconHeight / -2, iconWidth, iconHeight);\n          ctx.translate(0, iconHeight / 2 + splashIconPadding);\n        }\n      }\n\n      ctx.fillStyle = backgroundIsLight ? 'white' : 'black';\n      ctx.font = `${defaultSplashTextSize}px ${defaultFontName}`;\n\n      // Set the user-requested font; if it's invalid, the set will fail.\n      const s = getComputedStyle(manifestEl);\n      ctx.font = s.getPropertyValue('--pwacompat-splash-font'); // blank for old browsers\n\n      const title = manifest['name'] || manifest['short_name'] || document.title;\n      const measure = ctx.measureText(title);\n      const textHeight = (measure.actualBoundingBoxAscent || defaultSplashTextSize);\n      ctx.translate(0, textHeight);\n\n      if (measure.width < width * 0.8) {\n        // short-circuit, just draw entire string\n        ctx.fillText(title, measure.width / -2, 0);\n      } else {\n        // longer wrap case, draw once we have >0.7 width accumulated\n        const words = title.split(/\\s+/g);\n        for (let i = 1; i <= words.length; ++i) {\n          const cand = words.slice(0, i).join(' ');\n          const measureWidth = ctx.measureText(cand).width;\n          if (i === words.length || measureWidth > width * 0.6) {\n            // render accumulated words\n            ctx.fillText(cand, measureWidth / -2, 0);\n            ctx.translate(0, textHeight * 1.2);\n            words.splice(0, i);\n            i = 0;\n          }\n        }\n      }\n\n      return () => {\n        const data = ctx.canvas.toDataURL();\n        if (debug) {\n          const img = document.createElement('img');\n          img.src = data;\n          document.body.append(img);\n        }\n        appendSplash(orientation, data);\n        return data;\n      };\n    }\n\n    /**\n     * @param {string} orientation\n     * @param {string} data\n     */\n    function appendSplash(orientation, data) {\n      const generatedSplash = /** @type {!HTMLLinkElement} */ (document.createElement('link'));\n      generatedSplash.setAttribute('rel', 'apple-touch-startup-image');\n      generatedSplash.setAttribute('media', `(orientation: ${orientation})`);\n      generatedSplash.setAttribute('href', data);\n      document.head.appendChild(generatedSplash);\n    }\n\n    // fetch previous (session) iOS image updates\n    const rendered = store('iOS');\n    if (!debug && rendered) {\n      try {\n        const prev = /** @type {!Object<string, string>} */ (JSON.parse(rendered));\n        appendSplash('portrait', prev['p']);\n        appendSplash('landscape', prev['l']);\n        appleTouchIcons.forEach((icon) => {\n          const change = prev['i'][icon.href];\n          if (change) {\n            icon.href = change;\n          }\n        });\n        return;\n      } catch (e) {\n        // ignore, some problem with the JSON\n      }\n    }\n    const update = {'i': {}};\n\n    /**\n     * @param {?Image} applicationIcon\n     * @param {function(): void} done\n     */\n    function renderBothSplash(applicationIcon, done) {\n      const s = window.screen;\n      const portrait = splashFor(s.width, s.height, 'portrait', applicationIcon);\n      const landscape = splashFor(s.height, s.width, 'landscape', applicationIcon);\n\n      // this is particularly egregious setTimeout use, but the .toDataURL() is one of the\n      // \"bottlenecks\" of PWACompat, so don't elongate any single frame more than needed.\n\n      setTimeout(() => {\n        update['p'] = portrait();\n        setTimeout(() => {\n          update['l'] = landscape();\n          done();\n        }, 10);\n      }, 10);\n    }\n\n    // fetches and redraws any remaining icons in appleTouchIcons (to have proper bg)\n    function redrawRemainingIcons(done) {\n      let left = appleTouchIcons.length + 1;\n      const check = () => {\n        if (!--left) {\n          done();\n        }\n      };\n      check();\n      appleTouchIcons.forEach((icon) => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.onerror = check;\n        img.onload = () => {\n          img.onload = null;\n          icon.href = updateTransparent(img, backgroundColor, true);\n          update['i'][img.src] = icon.href;\n          check();\n        };\n        img.src = icon.href;\n      });\n    }\n\n    // write the update to sessionStorage\n    function saveUpdate() {\n      store('iOS', JSON.stringify(update));\n    }\n\n    // called repeatedly until a valid icon is found\n    function fetchIconAndBuildSplash() {\n      const icon = appleTouchIcons.shift();\n      if (!icon) {\n        renderBothSplash(null, saveUpdate);  // ran out of icons, render without one\n        return;\n      }\n\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onerror = () => void fetchIconAndBuildSplash();  // try again\n      img.onload = () => {\n        img.onload = null;  // iOS Safari might call this many times\n        renderBothSplash(img, () => {\n          // ... if the icon used for splash changed, redraw others too\n          const redrawn = manifest['background_color'] && updateTransparent(img, backgroundColor);\n          if (redrawn) {\n            icon.href = redrawn;\n            update['i'][img.src] = redrawn;\n            redrawRemainingIcons(saveUpdate);\n          } else {\n            saveUpdate();\n          }\n        });\n      };\n\n      img.src = icon.href;  // trigger load\n    }\n    fetchIconAndBuildSplash();\n  }\n\n  function findAppleId(related) {\n    let itunes;\n    (related || [])\n        .filter((app) => app['platform'] === 'itunes')\n        .forEach((app) => {\n          if (app['id']) {\n            itunes = app['id'];\n          } else {\n            const match = app['url'].match(/id(\\d+)/);\n            if (match) {\n              itunes = match[1];\n            }\n          }\n        });\n    return itunes;\n  }\n\n  function simpleOrientationFor(v) {\n    const prefix = String(v || '').substr(0, 3);\n    return {'por': 'portrait', 'lan': 'landscape'}[prefix] || '';\n  }\n\n  /**\n   * @param {string} color\n   * @param {boolean} viewportFitCover\n   */\n  function updateThemeColorRender(color, viewportFitCover) {\n    if (!(isSafariMobile || isEdgePWA)) {\n      return;\n    }\n\n    const themeIsLight = shouldUseLightForeground(color);\n    if (isSafariMobile) {\n      // nb. Safari 11.3+ gives a deprecation warning about this meta tag.\n      const content = viewportFitCover ? 'black-translucent' : (themeIsLight ? 'black' : 'default');\n      meta('apple-mobile-web-app-status-bar-style', content);\n    } else {\n      // Edge PWA\n      const t = getEdgeTitleBar();\n      if (!t) {\n        return;  // something went wrong, we had a UWP without titleBar\n      }\n      // Foreground is black if theme is light, otherwise white.\n      const v = themeIsLight ? 255 : 0;\n      t.foregroundColor = /** @type {WindowsColor} */ ({'r': v, 'g': v, 'b': v, 'a': 255});\n      t.backgroundColor = colorToWindowsRGBA(color);\n    }\n  }\n\n  /**\n   * @return {!ApplicationViewTitleBar|undefined}\n   */\n  function getEdgeTitleBar() {\n    try {\n      return Windows.UI.ViewManagement.ApplicationView.getForCurrentView().titleBar;\n    } catch (e) {\n      // implicit return undefined\n    }\n  }\n\n  /**\n   * The Windows titlebar APIs expect an object of {r, g, b, a}.\n   *\n   * @param {string} color\n   * @return {WindowsColor}\n   */\n  function colorToWindowsRGBA(color) {\n    const data = readColor(color);\n    return /** @type {WindowsColor} */ ({\n      'r': data[0],\n      'g': data[1],\n      'b': data[2],\n      'a': data[3],\n    });\n  }\n\n  /**\n   * @param {string} color\n   * @return {!Uint8ClampedArray}\n   */\n  function readColor(color) {\n    const c = contextForCanvas();\n    c.fillStyle = color;\n    c.fillRect(0, 0, 1, 1);\n    return c.getImageData(0, 0, 1, 1).data || [];  // incase this fails for some reason\n  }\n\n  /**\n   * @param {string} color\n   * @return {boolean}\n   */\n  function shouldUseLightForeground(color) {\n    const pixelData = readColor(color);\n\n    // From https://cs.chromium.org/chromium/src/chrome/android/java/src/org/chromium/chrome/browser/util/ColorUtils.java\n    const data = pixelData.map((v) => {\n      const f = v / 255;\n      return (f < 0.03928) ? f / 12.92 : Math.pow((f + 0.055) / 1.055, 2.4);\n    });\n    const lum = 0.2126 * data[0] + 0.7152 * data[1] + 0.0722 * data[2];\n    const contrast = Math.abs((1.05) / (lum + 0.05));\n    return contrast > 3;\n  }\n\n  function updateTransparent(image, background, force=false) {\n    const context = contextForCanvas(image);\n    context.drawImage(image, 0, 0);\n\n    // look for transparent pixel in top-left\n    // TODO: Chrome actually checks the four corners for some cases.\n    if (!force) {\n      const imageData = context.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] === 255) {\n        return;\n      }\n    }\n\n    context.globalCompositeOperation = 'destination-over';  // only replace transparent areas\n    context.fillStyle = background;\n    context.fillRect(0, 0, image.width, image.height);\n    return context.canvas.toDataURL();\n  }\n\n  function contextForCanvas({width, height} = {width: 1, height: 1}) {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas.getContext('2d');\n  }\n\n  // actually run PWACompat here\n  if (document.readyState === 'complete') {\n    setup();\n  } else {\n    window.addEventListener('load', setup);\n  }\n}());\n"],"sourceRoot":""}